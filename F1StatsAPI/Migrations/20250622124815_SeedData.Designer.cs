// <auto-generated />
using System;
using F1StatsAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace F1StatsAPI.Migrations
{
    [DbContext(typeof(F1StatsContext))]
    [Migration("20250622124815_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("F1StatsAPI.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ChassisCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PoweUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChassisCode = "SF-25",
                            Name = "Ferrari SF-25",
                            PoweUnit = "Ferrari"
                        });
                });

            modelBuilder.Entity("F1StatsAPI.Models.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FamilyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GivenName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Drivers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "LEC",
                            Country = "Monaco",
                            DateOfBirth = new DateTime(1997, 10, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FamilyName = "Leclerc",
                            GivenName = "Charles",
                            Number = 16,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 2,
                            Code = "HAM",
                            Country = "United Kingdom",
                            DateOfBirth = new DateTime(1985, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FamilyName = "Hamilton",
                            GivenName = "Lewis",
                            Number = 44,
                            TeamId = 1
                        });
                });

            modelBuilder.Entity("F1StatsAPI.Models.GrandPrix", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CircuitName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("Distance")
                        .HasColumnType("float");

                    b.Property<int>("Laps")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("GrandPrix");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CircuitName = "Albert Park Circuit",
                            Date = new DateTime(2025, 3, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Distance = 306.12400000000002,
                            Laps = 58,
                            Name = "Australian Grand Prix"
                        });
                });

            modelBuilder.Entity("F1StatsAPI.Models.Result", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<bool>("DidNotFinish")
                        .HasColumnType("bit");

                    b.Property<int>("DriverId")
                        .HasColumnType("int");

                    b.Property<string>("GapToLeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GrandPrixId")
                        .HasColumnType("int");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("Time")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("DriverId");

                    b.HasIndex("GrandPrixId");

                    b.HasIndex("TeamId");

                    b.ToTable("Results");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarId = 1,
                            DidNotFinish = false,
                            DriverId = 1,
                            GapToLeader = "+19.826s",
                            GrandPrixId = 1,
                            Points = 4,
                            Position = 8,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 2,
                            CarId = 1,
                            DidNotFinish = false,
                            DriverId = 2,
                            GapToLeader = "+22.473s",
                            GrandPrixId = 1,
                            Points = 1,
                            Position = 10,
                            TeamId = 1
                        });
                });

            modelBuilder.Entity("F1StatsAPI.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BaseLocation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("FoundationYear")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TeamChief")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorldChampionships")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId")
                        .IsUnique();

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BaseLocation = "Maranello, Italy",
                            CarId = 1,
                            FoundationYear = 1929,
                            Name = "Scuderia Ferrari",
                            TeamChief = "Frédéric Vasseur",
                            WorldChampionships = 16
                        });
                });

            modelBuilder.Entity("F1StatsAPI.Models.Driver", b =>
                {
                    b.HasOne("F1StatsAPI.Models.Team", "Team")
                        .WithMany("Drivers")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("F1StatsAPI.Models.Result", b =>
                {
                    b.HasOne("F1StatsAPI.Models.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("F1StatsAPI.Models.Driver", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("F1StatsAPI.Models.GrandPrix", "GrandPrix")
                        .WithMany()
                        .HasForeignKey("GrandPrixId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("F1StatsAPI.Models.Team", "Team")
                        .WithMany("Results")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Driver");

                    b.Navigation("GrandPrix");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("F1StatsAPI.Models.Team", b =>
                {
                    b.HasOne("F1StatsAPI.Models.Car", "Car")
                        .WithOne()
                        .HasForeignKey("F1StatsAPI.Models.Team", "CarId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("F1StatsAPI.Models.Team", b =>
                {
                    b.Navigation("Drivers");

                    b.Navigation("Results");
                });
#pragma warning restore 612, 618
        }
    }
}
